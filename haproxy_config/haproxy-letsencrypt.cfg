##
# Setup Instructions:
#	# Choose "temp webserver" when you run `certbot`
#	# You need to create a new chain because HAProxy expects it in a certian order
#	sed -i.bak 's/notify_only=1/notify_only=0/g' /etc/yum/pluginconf.d/search-disabled-repos.conf
#	yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#	yum -y install certbot
#	certbot certonly
#	mkdir /etc/haproxy/ssl
#	export LEPATH=/etc/letsencrypt/live/<your domain>
#	cat $LEPATH/cert.pem $LEPATH/chain.pem $LEPATH/privkey.pem > /etc/haproxy/ssl/ocp-cain.pem
#
# Sample Crontab renewal
#	certbot renew --renew-hook "systemctl restart haproxy" >> /var/log/le-renew.log
##
global
    chroot      /var/lib/haproxy
    user        haproxy
    group       haproxy
    daemon

    maxconn     20000

    log         127.0.0.1 local0 notice
    # Uncomment to enable connection level logging and debug messages
    #log         127.0.0.1 local1 debug

    stats socket /var/lib/haproxy/stats

# See https://docs.openshift.com/container-platform/latest/architecture/core_concepts/routes.html#env-variables
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option                  log-separate-errors
    option                  http-server-close
    timeout http-request    5s
    timeout connect         5s
    timeout client          30s
    timeout server          30s
    timeout tunnel          1h
    timeout check           5s
    maxconn                 20000

listen stats *:9000
    mode http
    stats enable
    stats uri       /
    stats auth      admin:redhat1
    stats refresh   5s

frontend openshift-master-api-frontend
    bind *:8443 ssl crt /etc/haproxy/ssl/ocp-fullchain.pem
    option tcplog
    default_backend openshift-master-api-backend


backend openshift-master-api-backend
    balance source
    server master3 172.31.15.244:8443 check ssl verify none
    
# Router Config

frontend router-http
    bind *:80
    default_backend router-backend-http

frontend router-https
    bind *:443
    mode tcp
    option tcplog
    default_backend router-backend-https

backend router-backend-http
    balance source
    mode http
    option httpclose
    option forwardfor
    option httpchk get /healthz
    http-check expect status 200
    server router1 172.31.15.244:80 check port 1936

backend router-backend-https
    mode tcp
    balance source
    option httpchk get /healthz
    http-check expect status 200
    server router1 172.31.15.244:443 check port 1936  

#-----
