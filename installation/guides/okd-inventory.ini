# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
etcd
glusterfs

# Set variables common for all OSEv3 hosts
[OSEv3:vars]

# If ansible_ssh_user is not root, ansible_sudo must be set to true
ansible_ssh_user=root

# Install Enterprise or Origin; set up ntp
openshift_deployment_type=origin
openshift_clock_enabled=true

# Network/DNS Related
openshift_master_default_subdomain=apps.192.168.1.81.nip.io
osm_cluster_network_cidr=10.1.0.0/16
osm_host_subnet_length=8
openshift_portal_net=172.30.0.0/16
openshift_docker_insecure_registries=0.0.0.0/0

# CNS Storage
openshift_storage_glusterfs_namespace=glusterfs
openshift_storage_glusterfs_name=storage
openshift_storage_glusterfs_heketi_wipe=true
openshift_storage_glusterfs_wipe=true
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_block_storageclass=true
openshift_storage_glusterfs_block_host_vol_size=50

# Automatically Deploy the router
openshift_hosted_manage_router=true
#openshift_router_selector={'node-role.kubernetes.io/infra':'true'}

# Automatically deploy the registry using glusterfs
openshift_hosted_manage_registry=true
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=10Gi
#openshift_registry_selector={'node-role.kubernetes.io/infra':'true'}
#openshift_hosted_registry_replicas=2

# Disble Checks
openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_availability,package_version

# 
# Network Policies that are available:
# redhat/openshift-ovs-networkpolicy # fine grained control
# redhat/openshift-ovs-multitenant # each project gets it's own "private" network
# redhat/openshift-ovs-subnet # "flat" network
#
# Network OVS Plugin to use
os_sdn_network_plugin_name='redhat/openshift-ovs-networkpolicy'

# Uncomment when setting up logging/metrics/prometheus
openshift_master_dynamic_provisioning_enabled=true
dynamic_volumes_check=False

# Logging
openshift_logging_install_logging=true
openshift_logging_es_pvc_dynamic=true
openshift_logging_es_pvc_size=20Gi
openshift_logging_es_pvc_storage_class_name=glusterfs-storage-block
openshift_logging_curator_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_logging_es_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_logging_kibana_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_logging_es_memory_limit=4G
openshift_logging_elasticsearch_proxy_image_version="v1.0.0"
openshift_logging_image_version=v3.11

# Metrics
openshift_metrics_install_metrics=true
openshift_metrics_cassandra_pvc_size=20Gi
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_cassandra_pvc_storage_class_name=glusterfs-storage-block
openshift_metrics_hawkular_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_metrics_heapster_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_metrics_cassandra_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_metrics_image_version=v3.11

# OKD specific stuff
openshift_cluster_monitoring_operator_install=true
enable_excluders=False
enable_docker_excluder=False
ansible_service_broker_install=False
containerized=True
openshift_additional_repos=[{'id': 'centos-paas', 'name': 'centos-paas', 'baseurl' :'https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin311', 'gpgcheck' :'0', 'enabled' :'1'}]

# If using Route53 or you're pointed to the master with a "vanity" name
openshift_master_public_api_url=https://ocp.192.168.1.81.nip.io:8443
openshift_master_public_console_url=https://ocp.192.168.1.81.nip.io:8443/console
openshift_master_api_port=8443
openshift_master_console_port=8443

# The following enabled htpasswd authentication
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
openshift_master_htpasswd_users={'developer': '$apr1$q2fVVf46$85HP/4JHGYeFBKAKPBblo0'}

## OpenShift host groups

# host group for etcd
[etcd]
dhcp-host-81.cloud.chx

# host group for masters - set scedulable to "true" for the web-console pod
[masters]
dhcp-host-81.cloud.chx openshift_schedulable=true

# host group for nodes, includes region info
[nodes]
dhcp-host-81.cloud.chx openshift_node_group_name='node-config-master-infra'
dhcp-host-60.cloud.chx openshift_node_group_name='node-config-compute'
dhcp-host-21.cloud.chx openshift_node_group_name='node-config-compute'

[glusterfs]
# "standalone" glusterfs nodes STILL need to be in the "[nodes]" section
dhcp-host-81.cloud.chx glusterfs_ip=192.168.1.81 glusterfs_zone=1 glusterfs_devices='[ "/dev/vdc" ]'
dhcp-host-60.cloud.chx glusterfs_ip=192.168.1.60 glusterfs_zone=2 glusterfs_devices='[ "/dev/vdc" ]'
dhcp-host-21.cloud.chx glusterfs_ip=192.168.1.21 glusterfs_zone=3 glusterfs_devices='[ "/dev/vdc" ]'
##
##
