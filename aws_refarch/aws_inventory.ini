# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
etcd
glusterfs

# Set variables common for all OSEv3 hosts
[OSEv3:vars]

# If ansible_ssh_user is not root, ansible_sudo must be set to true
ansible_user=ec2-user
ansible_become=yes
ansible_sudo=true

# Install Enterprise or Origin; set up ntp
openshift_deployment_type=openshift-enterprise
openshift_release=v3.9
# oreg_url_master=registry.access.redhat.com/openshift3/ose-${component}:${version}
# oreg_url_node=registry.access.redhat.com/openshift3/ose-${component}:${version}
openshift_clock_enabled=true
osm_use_cockpit=true
openshift_hostname_check=false


##  AWS
openshift_cloudprovider_kind=aws
openshift_clusterid=myocp
openshift_cloudprovider_aws_access_key="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
openshift_cloudprovider_aws_secret_key="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

# Registry Storage
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=s3
openshift_hosted_registry_storage_s3_accesskey="{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
openshift_hosted_registry_storage_s3_secretkey="{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
openshift_hosted_registry_storage_s3_bucket=myocp.example.com-registry
openshift_hosted_registry_storage_s3_region=us-east-1
openshift_hosted_registry_storage_s3_chunksize=26214400
openshift_hosted_registry_storage_s3_rootdirectory=/registry
openshift_hosted_registry_pullthrough=true
openshift_hosted_registry_acceptschema2=true
openshift_hosted_registry_enforcequota=true

# Network/DNS Related
openshift_master_default_subdomain=apps.myocp.example.com
osm_cluster_network_cidr=10.1.0.0/16
osm_host_subnet_length=8
openshift_portal_net=172.30.0.0/16
osm_default_node_selector="region=apps"
openshift_docker_insecure_registries=172.30.0.0/16
container_runtime_docker_storage_setup_device=/dev/nvme1n1

# CNS Storage
openshift_storage_glusterfs_namespace=glusterfs
openshift_storage_glusterfs_name=storage
openshift_storage_glusterfs_heketi_wipe=true
openshift_storage_glusterfs_wipe=true
openshift_storage_glusterfs_storageclass_default=false
openshift_storage_glusterfs_block_storageclass=false
openshift_storage_glusterfs_block_storageclass_default=false

# Automatically Deploy the router
openshift_hosted_manage_router=true
openshift_hosted_router_selector='region=infra'

# Automatically deploy the registry using glusterfs
openshift_hosted_manage_registry=true
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_selector='region=infra'
openshift_hosted_registry_replicas=3

# Disble Checks
openshift_disable_check=disk_availability,docker_storage,memory_availability

# Mulititenant functionality (i.e. each project gets it's own "private" network)
os_sdn_network_plugin_name='redhat/openshift-ovs-networkpolicy'

# Uncomment when setting up logging/metrics/prometheus
openshift_master_dynamic_provisioning_enabled=true
dynamic_volumes_check=False

# Logging
openshift_logging_install_logging=true

openshift_logging_storage_kind=dynamic
openshift_logging_storage_volume_size=25Gi
openshift_logging_es_cluster_size=3
openshift_logging_curator_nodeselector={'region':'infra'}
openshift_logging_es_nodeselector={'region':'infra'}
openshift_logging_kibana_nodeselector={'region':'infra'}
openshift_logging_es_memory_limit=4G

# Metrics
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind=dynamic
openshift_metrics_storage_volume_size=25Gi
openshift_metrics_hawkular_nodeselector={'region':'infra'}
openshift_metrics_heapster_nodeselector={'region':'infra'}
openshift_metrics_cassandra_nodeselector={'region':'infra'}

## Prometheus Metrics
openshift_hosted_prometheus_deploy=true
openshift_prometheus_namespace=openshift-metrics
openshift_prometheus_node_selector={'region':'infra'}

# Prometheus storage config
openshift_prometheus_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_storage_volume_name=prometheus
openshift_prometheus_storage_volume_size=20Gi
openshift_prometheus_storage_type='dynamic'

# For prometheus-alertmanager
openshift_prometheus_alertmanager_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_alertmanager_storage_volume_name=prometheus-alertmanager
openshift_prometheus_alertmanager_storage_volume_size=20Gi
openshift_prometheus_alertmanager_storage_type='dymanic'

# For prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_alertbuffer_storage_volume_name=prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_volume_size=20Gi
openshift_prometheus_alertbuffer_storage_type='dymanic'

openshift_prometheus_node_exporter_image_version=v3.9.25

openshift_enable_service_catalog=true

# Ansible Service Broker
openshift_hosted_etcd_storage_kind=dynamic
openshift_hosted_etcd_storage_volume_name=etcd-vol2
openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=20Gi
ansible_service_broker_local_registry_whitelist=['.*-apb$']

# If using Route53 or you're pointed to the master with a "vanity" name
openshift_master_public_api_url=https://master.myocp.example.com:443
openshift_master_public_console_url=https://master.myocp.example.com:443/console
openshift_master_api_port=443
openshift_master_console_port=443

# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has 
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method=native
openshift_master_cluster_hostname=master.myocp.example.com
openshift_master_cluster_public_hostname=master.myocp.example.com

# The following enabled htpasswd authentication
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/openshift-passwd'}]
openshift_master_htpasswd_users={'developer': '$apr1$q2fVVf46$85HP/4JHGYeFBKAKPBblo0'}

## OpenShift host groups

[masters]
ip-172-16-27-103.ec2.internal openshift_node_labels="{'region': 'master'}"
ip-172-16-34-16.ec2.internal openshift_node_labels="{'region': 'master'}"
ip-172-16-59-159.ec2.internal openshift_node_labels="{'region': 'master'}"

[etcd]

[etcd:children]
masters

[nodes]
ip-172-16-21-79.ec2.internal openshift_node_labels="{'region': 'apps'}"
ip-172-16-46-135.ec2.internal openshift_node_labels="{'region': 'apps'}"
ip-172-16-52-185.ec2.internal openshift_node_labels="{'region': 'apps'}"
ip-172-16-25-12.ec2.internal openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
ip-172-16-38-215.ec2.internal openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
ip-172-16-50-186.ec2.internal openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
ip-172-16-26-120.ec2.internal openshift_schedulable=True
ip-172-16-38-170.ec2.internal openshift_schedulable=True
ip-172-16-63-17.ec2.internal openshift_schedulable=True


[nodes:children]
masters

[glusterfs]
ip-172-16-26-120.ec2.internal glusterfs_devices='[ "/dev/nvme3n1" ]'
ip-172-16-38-170.ec2.internal glusterfs_devices='[ "/dev/nvme3n1" ]'
ip-172-16-63-17.ec2.internal glusterfs_devices='[ "/dev/nvme3n1" ]'

##
##
